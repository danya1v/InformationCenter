[{"D:\\Projects\\Gibdd\\InformationCenter\\src\\App.js":"1","D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\AdmPractice\\AdmPractice.js":"2","D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\Table\\CardTable.js":"3","D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\Menu\\leftMenu.js":"4","D:\\Projects\\Gibdd\\InformationCenter\\src\\index.js":"5","D:\\Projects\\Gibdd\\InformationCenter\\src\\admpractic.js":"6","D:\\Projects\\Gibdd\\InformationCenter\\src\\voditel.js":"7","D:\\Projects\\Gibdd\\InformationCenter\\src\\auto.js":"8","D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\Table\\APtable1.js":"9"},{"size":639,"mtime":1609145281248,"results":"10","hashOfConfig":"11"},{"size":2625,"mtime":1609145281249,"results":"12","hashOfConfig":"11"},{"size":1535,"mtime":1609145281269,"results":"13","hashOfConfig":"11"},{"size":6697,"mtime":1609145281251,"results":"14","hashOfConfig":"11"},{"size":224,"mtime":1609145281308,"results":"15","hashOfConfig":"11"},{"size":3003,"mtime":1609145281271,"results":"16","hashOfConfig":"11"},{"size":970,"mtime":1609145281309,"results":"17","hashOfConfig":"11"},{"size":1152,"mtime":1609145281271,"results":"18","hashOfConfig":"11"},{"size":3705,"mtime":1609154019725,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lu1isj",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\Gibdd\\InformationCenter\\src\\App.js",[],"D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\AdmPractice\\AdmPractice.js",["42"],"import React, { useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport CardTable from '../Table/CardTable';\r\nimport admpractic from '../../admpractic';\r\nimport voditel from '../../voditel';\r\nimport auto from '../../auto';\r\n\r\nimport {Link} from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  \r\n  flex: {\r\n    display: 'flex!important',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n   \r\n  }\r\n \r\n});\r\n\r\nexport default function AdmPractice(props) {\r\n  // const [vTable, setVTable] = useState(props.table);\r\n  const vTable = props.table;\r\n  \r\n\r\n  const classes = useStyles();\r\n    \r\n  return (\r\n   \r\n    <>\r\n    <Container style={{ width: '110%' }}>\r\n    {/* {props.table = 2 ? console.log(2): console.log('no')} */}\r\n          <Grid item container spacing={1} bgcolor=\"background.paper\" >\r\n    \r\n        <Grid item xs className={classes.flex}>\r\n          {vTable === 1 ? (admpractic.map((item, index) => (\r\n          <Link key={item.label} to = {item.link} style={{width:'345px', textDecoration: 'none' }} >\r\n          <CardTable \r\n          key={item.label}\r\n          img={item.img} \r\n          name={item.label} \r\n          text={item.text}\r\n        >\r\n          \r\n          </CardTable>\r\n         \r\n         </Link>\r\n        ))) : vTable === 2 ? (voditel.map((item, index) => (\r\n          <Link key={item.label} to = {item.link} style={{width:'345px', textDecoration: 'none' }} >\r\n          <CardTable \r\n          key={item.label}\r\n          img={item.img} \r\n          name={item.label} \r\n          text={item.text}\r\n        >\r\n          \r\n          </CardTable>\r\n         \r\n         </Link>\r\n        ))) : (auto.map((item, index) => (\r\n          <Link key={item.label} to = {item.link} style={{width:'345px', textDecoration: 'none' }} >\r\n          <CardTable \r\n          key={item.label}\r\n          img={item.img} \r\n          name={item.label} \r\n          text={item.text}\r\n        >\r\n          \r\n          </CardTable>\r\n         \r\n         </Link>\r\n        )))}\r\n       \r\n      \r\n      </Grid>\r\n     {  /*\r\n      <Grid item xs>\r\n        <CardTable \r\n         link ='adminpractic/APtable2' \r\n        img={image1} \r\n        name='Привлечение к административной отвестенности лица, возраст которого мнее 13 лет' \r\n        text=\"Ошибки по таблицам АдмПрактики для исправления\"/>\r\n        </Grid>\r\n        */}\r\n      </Grid>\r\n      \r\n    </Container>\r\n    </>\r\n  );\r\n}",["43","44"],"D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\Table\\CardTable.js",["45","46","47"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link} from 'react-router-dom'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    marginTop: '40px',\r\n    marginLeft : '20px',\r\n    marginRight : '20px',\r\n  },\r\n  media: {\r\n    height: 140,\r\n    \r\n    minHeight: '190px',\r\n    \r\n  },\r\n  link: {\r\n    textDecoration : 'none',\r\n  }\r\n});\r\n\r\nexport default function ImgMediaCard(props) {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <Card className={classes.root} >\r\n      <CardActionArea>\r\n        {props.img ? (<CardMedia\r\n          className={classes.media}\r\n          image= {props.img}\r\n          title=\"Contemplative Reptile\"\r\n        />): (<CircularProgress />)}\r\n        \r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {props.name}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {props.text}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\Menu\\leftMenu.js",["48","49","50","51","52","53","54"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n//my\r\nimport menu from '../../admpractic';\r\nimport voditel from '../../voditel'\r\nimport auto from '../../auto'\r\n\r\nimport {Link} from 'react-router-dom';\r\n//my\r\n\r\nconst drawerWidth = 300;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  LinkClass: {\r\n    textDecoration: 'none',\r\n    color: 'black',\r\n  },\r\n}));\r\n\r\n\r\nexport default function PersistentDrawerLeft(props) {\r\n \r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  \r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n     <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {/* <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        endIcon={<Icon>send</Icon>}\r\n        style={{ marginRight: 40 }}\r\n      >\r\n        Send\r\n      </Button> */}\r\n          <Typography variant=\"h6\" noWrap>\r\n            Информационный портал РОИО ГИБДД\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        \r\n        <Divider />\r\n        <List>\r\n          {menu.map((item, index) => (\r\n           <Link to = {item.link}\r\n            key={item.label}\r\n            className={classes.LinkClass}\r\n          >     \r\n           <ListItem button key={item.label} >\r\n           <ListItemIcon><ArrowRightIcon /></ListItemIcon>\r\n\r\n              {/* <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\r\n              <ListItemText primary={item.label} />\r\n            </ListItem>\r\n          </Link>\r\n         ))}\r\n          \r\n        </List>\r\n        \r\n        <Divider />\r\n        \r\n        <Divider />\r\n        <List>\r\n          {voditel.map((item, index) => (\r\n           <Link to = {item.link}\r\n            key={item.label}\r\n            className={classes.LinkClass}\r\n          >     \r\n           <ListItem button key={item.label} >\r\n           <ListItemIcon><ArrowRightIcon /></ListItemIcon>\r\n\r\n              {/* <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\r\n              <ListItemText primary={item.label} />\r\n            </ListItem>\r\n          </Link>\r\n         ))}\r\n          \r\n        </List>\r\n        \r\n        <Divider />\r\n        <Divider />\r\n        <List>\r\n          {auto.map((item, index) => (\r\n           <Link to = {item.link}\r\n            key={item.label}\r\n            className={classes.LinkClass}\r\n          >     \r\n           <ListItem button key={item.label} >\r\n           <ListItemIcon><ArrowRightIcon /></ListItemIcon>\r\n\r\n              {/* <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\r\n              <ListItemText primary={item.label} />\r\n            </ListItem>\r\n          </Link>\r\n         ))}\r\n          \r\n        </List>\r\n        \r\n        <Divider />\r\n        \r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        \r\n        <div className={classes.drawerHeader} />            \r\n      </main>\r\n      \r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Gibdd\\InformationCenter\\src\\index.js",[],"D:\\Projects\\Gibdd\\InformationCenter\\src\\admpractic.js",["55"],"D:\\Projects\\Gibdd\\InformationCenter\\src\\voditel.js",["56"],"D:\\Projects\\Gibdd\\InformationCenter\\src\\auto.js",["57"],"D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\Table\\APtable1.js",[],{"ruleId":"58","severity":1,"message":"59","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"58","severity":1,"message":"66","line":5,"column":8,"nodeType":"60","messageId":"61","endLine":5,"endColumn":19},{"ruleId":"58","severity":1,"message":"67","line":8,"column":8,"nodeType":"60","messageId":"61","endLine":8,"endColumn":14},{"ruleId":"58","severity":1,"message":"68","line":10,"column":9,"nodeType":"60","messageId":"61","endLine":10,"endColumn":13},{"ruleId":"58","severity":1,"message":"69","line":18,"column":8,"nodeType":"60","messageId":"61","endLine":18,"endColumn":17},{"ruleId":"58","severity":1,"message":"70","line":19,"column":8,"nodeType":"60","messageId":"61","endLine":19,"endColumn":16},{"ruleId":"58","severity":1,"message":"71","line":20,"column":26,"nodeType":"60","messageId":"61","endLine":20,"endColumn":32},{"ruleId":"58","severity":1,"message":"72","line":20,"column":34,"nodeType":"60","messageId":"61","endLine":20,"endColumn":39},{"ruleId":"58","severity":1,"message":"73","line":20,"column":41,"nodeType":"60","messageId":"61","endLine":20,"endColumn":47},{"ruleId":"58","severity":1,"message":"67","line":21,"column":8,"nodeType":"60","messageId":"61","endLine":21,"endColumn":14},{"ruleId":"58","severity":1,"message":"74","line":22,"column":8,"nodeType":"60","messageId":"61","endLine":22,"endColumn":12},{"ruleId":"58","severity":1,"message":"75","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":14},{"ruleId":"58","severity":1,"message":"75","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":14},{"ruleId":"58","severity":1,"message":"75","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":14},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["76"],"no-negated-in-lhs",["77"],"'CardActions' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Icon' is defined but never used.","'emblem' is defined but never used.","no-global-assign","no-unsafe-negation"]