[{"D:\\Projects\\Gibdd\\InformationCenter\\src\\App.js":"1","D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\AdmPractice\\AdmPractice.js":"2","D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\Table\\CardTable.js":"3","D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\Menu\\leftMenu.js":"4","D:\\Projects\\Gibdd\\InformationCenter\\src\\index.js":"5","D:\\Projects\\Gibdd\\InformationCenter\\src\\admpractic.js":"6","D:\\Projects\\Gibdd\\InformationCenter\\src\\voditel.js":"7","D:\\Projects\\Gibdd\\InformationCenter\\src\\auto.js":"8","D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\StartPage\\ImgMediaCard.js":"9","D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\Table\\CustomizedTables.js":"10","D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\MainFrame\\MainFrame.js":"11","D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\StartPage\\StartPage.js":"12","D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\Table\\DownloadXLSX\\index.js":"13","D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\StartPage\\TopMenu.js":"14"},{"size":636,"mtime":1609248232215,"results":"15","hashOfConfig":"16"},{"size":2930,"mtime":1611229839060,"results":"17","hashOfConfig":"16"},{"size":1415,"mtime":1609245515775,"results":"18","hashOfConfig":"16"},{"size":7709,"mtime":1611240876462,"results":"19","hashOfConfig":"16"},{"size":224,"mtime":1609145281308,"results":"20","hashOfConfig":"16"},{"size":3400,"mtime":1611217174959,"results":"21","hashOfConfig":"16"},{"size":970,"mtime":1609145281309,"results":"22","hashOfConfig":"16"},{"size":1152,"mtime":1609145281271,"results":"23","hashOfConfig":"16"},{"size":1716,"mtime":1609145281253,"results":"24","hashOfConfig":"16"},{"size":6316,"mtime":1611241535733,"results":"25","hashOfConfig":"16"},{"size":1632,"mtime":1611241609262,"results":"26","hashOfConfig":"16"},{"size":1905,"mtime":1611218912733,"results":"27","hashOfConfig":"16"},{"size":1066,"mtime":1609145281270,"results":"28","hashOfConfig":"16"},{"size":1361,"mtime":1611240206305,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lu1isj",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\Gibdd\\InformationCenter\\src\\App.js",[],"D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\AdmPractice\\AdmPractice.js",["66"],"import Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport CardTable from '../Table/CardTable';\r\nimport admpractic from '../../admpractic';\r\nimport voditel from '../../voditel';\r\nimport auto from '../../auto';\r\nimport PersistentDrawerLeft from '../Menu/leftMenu';\r\nimport {HashRouter as Router, Route} from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  \r\n  flex: {\r\n    display: 'flex!important',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n   \r\n  }\r\n \r\n});\r\n\r\nexport default function AdmPractice(props) {\r\n  // const [vTable, setVTable] = useState(props.table);\r\n  const vTable = props.table;\r\n  const vName = props.name;\r\n  const vURL = props.urlCashe;\r\n\r\n  const classes = useStyles();\r\n    \r\n  return (\r\n   \r\n    <>\r\n    {/* <Route component = {PersistentDrawerLeft} /> */}\r\n    <Route render={()=><PersistentDrawerLeft name={vName} url={vURL}/>}/>    \r\n    {console.log(vName)}\r\n    <Container style={{ width: '110%' }}>\r\n    {/* {props.table = 2 ? console.log(2): console.log('no')} */}\r\n          <Grid item container spacing={1} bgcolor=\"background.paper\" >\r\n    \r\n        <Grid item xs className={classes.flex}>\r\n          \r\n          {vTable === 1 ? (admpractic.map((item, index) => (\r\n          <Link key={item.label} to = {item.link} style={{width:'345px', textDecoration: 'none' }} >\r\n          <CardTable \r\n          key={item.label}\r\n          img={item.img} \r\n          name={item.label} \r\n          text={item.text}\r\n        >\r\n          \r\n          </CardTable>\r\n         \r\n         </Link>\r\n        ))) : vTable === 2 ? (voditel.map((item, index) => (\r\n          <Link key={item.label} to = {item.link} style={{width:'345px', textDecoration: 'none' }} >\r\n          <CardTable \r\n          key={item.label}\r\n          img={item.img} \r\n          name={item.label} \r\n          text={item.text}\r\n        >\r\n          \r\n          </CardTable>\r\n         \r\n         </Link>\r\n        ))) : (auto.map((item, index) => (\r\n          <Link key={item.label} to = {item.link} style={{width:'345px', textDecoration: 'none' }} >\r\n          <CardTable \r\n          key={item.label}\r\n          img={item.img} \r\n          name={item.label} \r\n          text={item.text}\r\n        >\r\n          \r\n          </CardTable>\r\n         \r\n         </Link>\r\n        )))}\r\n       \r\n      \r\n      </Grid>\r\n     {  /*\r\n      <Grid item xs>\r\n        <CardTable \r\n         link ='adminpractic/APtable2' \r\n        img={image1} \r\n        name='Привлечение к административной отвестенности лица, возраст которого мнее 13 лет' \r\n        text=\"Ошибки по таблицам АдмПрактики для исправления\"/>\r\n        </Grid>\r\n        */}\r\n      </Grid>\r\n      \r\n    </Container>\r\n    </>\r\n  );\r\n}",["67","68"],"D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\Table\\CardTable.js",[],"D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\Menu\\leftMenu.js",["69","70","71","72","73","74","75","76","77","78","79","80"],"import React, { useState, useEffect } from 'react';\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\n//my\r\nimport menu from \"../../admpractic\";\r\nimport voditel from \"../../voditel\";\r\nimport auto from \"../../auto\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n//my хлебные крошки\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\r\nimport GrainIcon from \"@material-ui/icons/Grain\";\r\nimport MainFrame from '../MainFrame/MainFrame';\r\n\r\nconst drawerWidth = 350;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  LinkClass: {\r\n    textDecoration: \"none\",\r\n    color: \"black\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n    fontSize: \"22px\",\r\n    margin: \"0 auto\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 26,\r\n    height: 26,\r\n  },\r\n  title: {\r\n    marginLeft: \"250px\",\r\n  },\r\n}));\r\n\r\n//хлебные крошки\r\n\r\n\r\nexport default function PersistentDrawerLeft(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(false);\r\n   \r\n\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  \r\n \r\n  return (\r\n    <>\r\n {console.log(props.nameTwo)}\r\n    <div className={classes.root}>\r\n     \r\n\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        \r\n            <Link\r\n              color=\"inherit\"\r\n             \r\n              className={classes.link}\r\n              to = \"/\"\r\n            >\r\n              <HomeIcon className={classes.icon} />\r\n              Главное меню\r\n            </Link>\r\n            <Typography color=\"textPrimary\" className={classes.link}>{props.name}</Typography>\r\n              \r\n              \r\n            \r\n            <Typography color=\"textPrimary\" className={classes.link}>\r\n              \r\n              {props.nameTwo}\r\n            </Typography>\r\n          \r\n\r\n          {/* <Typography variant=\"h6\" className={classes.title}>\r\n            Информационный портал РОИО ГИБДД\r\n          </Typography> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}S\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n\r\n        <Divider />\r\n        <List>\r\n          {menu.map((item, index) => (\r\n            <Link\r\n              to={item.link}\r\n              key={item.label}\r\n              className={classes.LinkClass}\r\n              onClick={handleDrawerClose}\r\n            >\r\n              <ListItem button key={item.label}>\r\n                <ListItemIcon>\r\n                  <ArrowRightIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={item.label} />\r\n              </ListItem>\r\n            </Link>\r\n          ))}\r\n        </List>\r\n\r\n        <Divider />\r\n\r\n        <Divider />\r\n        <List>\r\n          {voditel.map((item, index) => (\r\n            <Link\r\n              to={item.link}\r\n              key={item.label}\r\n              className={classes.LinkClass}\r\n              onClick={handleDrawerClose}\r\n            >\r\n              <ListItem button key={item.label}>\r\n                <ListItemIcon>\r\n                  <ArrowRightIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={item.label} />\r\n              </ListItem>\r\n            </Link>\r\n          ))}\r\n        </List>\r\n\r\n        <Divider />\r\n        <Divider />\r\n        <List>\r\n          {auto.map((item, index) => (\r\n            <Link\r\n              to={item.link}\r\n              key={item.label}\r\n              onClick={handleDrawerClose}\r\n              className={classes.LinkClass}\r\n            >\r\n              <ListItem button key={item.label}>\r\n                <ListItemIcon>\r\n                  <ArrowRightIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={item.label} />\r\n              </ListItem>\r\n            </Link>\r\n          ))}\r\n        </List>\r\n\r\n        <Divider />\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n      </main>\r\n    </div>\r\n    \r\n    </>\r\n  );\r\n}\r\n","D:\\Projects\\Gibdd\\InformationCenter\\src\\index.js",[],"D:\\Projects\\Gibdd\\InformationCenter\\src\\admpractic.js",["81"],"import emblem from './Components/StartPage/images/emblem.jpg'\r\nimport gibdd from './Components/StartPage/images/gibdd.png'\r\n\r\nconst menu = [\r\n    {\r\n      link: '/adminpractic/1',\r\n      label: 'Привлечение к Адм. отв. лица, возраст которого менее 13 лет',\r\n      img: gibdd,\r\n      text: 'Необходимо каждому подразделению проверить на наличие ошибок'\r\n    },\r\n    {\r\n      link: '/adminpractic/2',\r\n      label: 'Привлечение к Адм. отв. лица, возраст которого более 100 лет',\r\n      img: gibdd,\r\n      text: 'Необходимо каждому подразделению проверить на наличие ошибок '\r\n    },\r\n    {\r\n      link: '/adminpractic/3',\r\n      label: 'Неверная квалификация субъекта административного правонарушения - \"водитель\"',\r\n      img: gibdd,\r\n      text: 'Необходимо каждому подразделению проверить на наличие ошибок '\r\n    },\r\n    {\r\n      link: '/adminpractic/4',\r\n      label: 'Нарушение даты в протоколе',\r\n      img: gibdd,\r\n      text: 'Необходимо каждому подразделению проверить на наличие ошибок '\r\n    },\r\n    {\r\n      link: '/adminpractic/5',\r\n      label: 'Ошибка в номере телефона',\r\n      img: gibdd,\r\n      text: 'Необходимо каждому подразделению проверить на наличие ошибок '\r\n    },\r\n    {\r\n      link: '/adminpractic/6',\r\n      label: 'Неверная квалификация субъекта административного правонарушения - \"пассажир\"',\r\n      img: gibdd,\r\n      text: 'Необходимо каждому подразделению проверить на наличие ошибок '\r\n    },\r\n    {\r\n      link: '/adminpractic/7',\r\n      label: 'Ошибка в серии и номере паспорта, лица совершившего административное правонарушение',\r\n      img: gibdd,\r\n      text: 'Необходимо каждому подразделению проверить на наличие ошибок '\r\n    },\r\n    {\r\n      link: '/adminpractic/8',\r\n      label: 'Неверная квалификация субъекта административного правонарушения - \"пешеход\"',\r\n      img: gibdd,\r\n      text: 'Необходимо каждому подразделению проверить на наличие ошибок '\r\n    },\r\n    {\r\n      link: '/adminpractic/9',\r\n      label: 'Ошибка в месте составления первичного материала',\r\n      img: gibdd,\r\n      text: 'Необходимо каждому подразделению проверить на наличие ошибок '\r\n    },\r\n    {\r\n      link: '/adminpractic/10',\r\n      label: 'Ошибка в серии или номере водительского удостоверения',\r\n      img: gibdd,\r\n      text: 'Необходимо каждому подразделению проверить на наличие ошибок '\r\n    },\r\n    ];\r\n\r\n    export default menu","D:\\Projects\\Gibdd\\InformationCenter\\src\\voditel.js",["82"],"import emblem from './Components/StartPage/images/emblem.jpg'\r\nimport gibdd from './Components/StartPage/images/gibdd.png'\r\n\r\nconst voditel = [\r\n    {\r\n      link: '/driver/11',\r\n      label: 'Дата лицензии водителя',\r\n      img: gibdd,\r\n      text: 'Необходимо каждому подразделению проверить на наличие ошибок'\r\n    },\r\n    {\r\n      link: '/driver/12',\r\n      label: 'Ошибка в медицинской справки водителя',\r\n      img: gibdd,\r\n      text: 'Необходимо каждому подразделению проверить на наличие ошибок '\r\n    },\r\n    {\r\n      link: '/driver/13',\r\n      label: 'Ошибка в телефоне водителя',\r\n      img: gibdd,\r\n      text: 'Необходимо каждому подразделению проверить на наличие ошибок '\r\n    }\r\n    ];\r\n\r\n    export default voditel","D:\\Projects\\Gibdd\\InformationCenter\\src\\auto.js",["83"],"import emblem from './Components/StartPage/images/emblem.jpg'\r\nimport gibdd from './Components/StartPage/images/gibdd.png'\r\n\r\nconst auto = [\r\n    {\r\n      link: '/transport/14',\r\n      label: 'Ошибка в категории транспорта',\r\n      img: gibdd,\r\n      text: 'Необходимо каждому подразделению проверить на наличие ошибок'\r\n    },\r\n    {\r\n      link: '/transport/15',\r\n      label: 'Ошибка в фамилии водителя',\r\n      img: gibdd,\r\n      text: 'Необходимо каждому подразделению проверить на наличие ошибок'\r\n    },\r\n    {\r\n      link: '/transport/16',\r\n      label: 'AdmDriverOne',\r\n      img: gibdd,\r\n      text: 'Ошибка в максимальной массе автомобиля'\r\n    },\r\n    {\r\n      link: '/transport/17',\r\n      label: 'Ошибка мощности автомобиля',\r\n      img: gibdd,\r\n      text: 'Необходимо каждому подразделению проверить на наличие ошибок '\r\n    },\r\n    \r\n    ];\r\n\r\n    export default auto","D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\StartPage\\ImgMediaCard.js",["84","85"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 345,\r\n    textDecoration : 'none',\r\n    marginLeft : '30px',\r\n    marginRight : '30px',\r\n    marginTop: '50px',\r\n    \r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  link: {\r\n    textDecoration : 'none',\r\n   \r\n  },\r\n  text: {\r\n    color: 'black!important',\r\n    textDecoration: 'none!important',\r\n    \r\n    minHeight: '50px',\r\n  },\r\n  card: {\r\n   \r\n  }\r\n  \r\n  \r\n \r\n \r\n});\r\n\r\nexport default function ImgMediaCard(props) {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <Link to = {`/${props.link}`} className={classes.link}>\r\n    <Card className={classes.root} >\r\n     \r\n\r\n      <CardActionArea className={classes.card}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image= {props.img}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.text}>\r\n            {props.name}\r\n          </Typography>\r\n          <Typography  variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {props.text}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n   \r\n     \r\n    </Card>\r\n     </Link>\r\n  );\r\n}\r\n","D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\Table\\CustomizedTables.js",["86"],"D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\MainFrame\\MainFrame.js",["87"],"D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\StartPage\\StartPage.js",["88"],"D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\Table\\DownloadXLSX\\index.js",["89"],"import React from 'react'\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport const ExportCSV = ({csvData, fileName}) => {\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n    const exportToCSV = (csvData, fileName) => {\r\n        const ws = XLSX.utils.json_to_sheet(csvData);\r\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n        const data = new Blob([excelBuffer], {type: fileType});\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n    }\r\n    return (\r\n        \r\n        <Button variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        \r\n\r\n        startIcon={<SaveIcon/>} onClick={(e) => exportToCSV(csvData,fileName)}>Скачать</Button>\r\n       \r\n    )\r\n}","D:\\Projects\\Gibdd\\InformationCenter\\src\\Components\\StartPage\\TopMenu.js",["90","91"],{"ruleId":"92","severity":1,"message":"93","line":8,"column":23,"nodeType":"94","messageId":"95","endLine":8,"endColumn":29},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"92","severity":1,"message":"100","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"101","line":18,"column":8,"nodeType":"94","messageId":"95","endLine":18,"endColumn":17},{"ruleId":"92","severity":1,"message":"102","line":19,"column":8,"nodeType":"94","messageId":"95","endLine":19,"endColumn":16},{"ruleId":"92","severity":1,"message":"93","line":20,"column":27,"nodeType":"94","messageId":"95","endLine":20,"endColumn":33},{"ruleId":"92","severity":1,"message":"103","line":20,"column":35,"nodeType":"94","messageId":"95","endLine":20,"endColumn":40},{"ruleId":"92","severity":1,"message":"104","line":20,"column":42,"nodeType":"94","messageId":"95","endLine":20,"endColumn":48},{"ruleId":"92","severity":1,"message":"105","line":21,"column":8,"nodeType":"94","messageId":"95","endLine":21,"endColumn":14},{"ruleId":"92","severity":1,"message":"106","line":22,"column":8,"nodeType":"94","messageId":"95","endLine":22,"endColumn":12},{"ruleId":"92","severity":1,"message":"107","line":31,"column":8,"nodeType":"94","messageId":"95","endLine":31,"endColumn":19},{"ruleId":"92","severity":1,"message":"108","line":33,"column":8,"nodeType":"94","messageId":"95","endLine":33,"endColumn":20},{"ruleId":"92","severity":1,"message":"109","line":34,"column":8,"nodeType":"94","messageId":"95","endLine":34,"endColumn":17},{"ruleId":"92","severity":1,"message":"110","line":35,"column":8,"nodeType":"94","messageId":"95","endLine":35,"endColumn":17},{"ruleId":"92","severity":1,"message":"111","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":14},{"ruleId":"92","severity":1,"message":"111","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":14},{"ruleId":"92","severity":1,"message":"111","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":14},{"ruleId":"92","severity":1,"message":"112","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":19},{"ruleId":"92","severity":1,"message":"105","line":8,"column":8,"nodeType":"94","messageId":"95","endLine":8,"endColumn":14},{"ruleId":"92","severity":1,"message":"93","line":14,"column":23,"nodeType":"94","messageId":"95","endLine":14,"endColumn":29},{"ruleId":"92","severity":1,"message":"113","line":8,"column":8,"nodeType":"94","messageId":"95","endLine":8,"endColumn":28},{"ruleId":"92","severity":1,"message":"114","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":11},{"ruleId":"92","severity":1,"message":"115","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":12},{"ruleId":"92","severity":1,"message":"116","line":7,"column":8,"nodeType":"94","messageId":"95","endLine":7,"endColumn":18},{"ruleId":"92","severity":1,"message":"117","line":9,"column":9,"nodeType":"94","messageId":"95","endLine":9,"endColumn":13},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["118"],"no-negated-in-lhs",["119"],"'useEffect' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Button' is defined but never used.","'Icon' is defined but never used.","'Breadcrumbs' is defined but never used.","'WhatshotIcon' is defined but never used.","'GrainIcon' is defined but never used.","'MainFrame' is defined but never used.","'emblem' is defined but never used.","'CardActions' is defined but never used.","'PersistentDrawerLeft' is defined but never used.","'Box' is defined but never used.","'Grid' is defined but never used.","'IconButton' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]